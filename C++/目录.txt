p2-1 /*实现一个简单的菜单程序，运行时显示"Menu: A(dd) D(elete) S(ort) Q(uit)， Select one:"提示用户输入，A表示增加，D表示删除，S表示排序，Q表示退出，输入为A、D、S时分别提示"数据已经增加、删除、排序。"输入为Q时程序结束。要求使用if … else语句进行判断，用break、continue控制程序流程。 */

p2-2 /*定义枚举类型weekday，包括Sunday到Saturday七个元素在程序中定义weekday类型的变量，对其赋值，定义整型变量，看看能否对其赋weekday类型的值。*/

p3   /*引用传递、函数重载*/

p3-1 /*递归函数*/

p3-2 /*使用模板函数实现Swap( x， y )，函数功能为交换x、y的值。*/

p4   /*联合体union和枚举enum*/

p4-1 /*结构体*/

p5-1 /*命名空间作用域*/

p5-2 /*对象的生存期：静态生存期、动态生存期*/

p5-3 /*类的静态数据成员*/

p5-4 /*类的静态函数成员*/

p5-5 /*友元函数。友元函数非该类的成员函数，可以通过对象名访问私有和保护成员*/

p5-6 /*友元类。B类为A类的友元类，那么B类的所有成员函数都是A类的友元函数，都可以访问A类的私有或保护成员*/

p5-7 /*常对象和常成员函数*/

p5-8 /*常数据成员、静态常数据成员*/

p5-9 /*常引用*/

p6-1 /*数组*/

p6-2 /*指针。“*”指针运算符，“&”取地址运算符。*/

p6-3 /*指针。指向常量的指针和指针类型的常量。*/

p6-4 /*指针。void类型的指针*/

p6-5 /*指针。用指针处理数组*/

p6-6 /*指针。指针数组*/

p6-7 /*指针。作为函数参数*/

p6-8 /*指针。指针型函数*/

p6-9 /*指针。this指针*/

p6-10 /*动态内存分配（动态创建堆对象）*/

p6-11 /*动态内存分配。类对象和数组*/

p6-12 /*vector,动态数组，一个类模板*/

p6-13 /*C++使用字符数组来处理字符串，但还定义了string类来处理字符串*/

p6-14 /*指针与引用的区别*/

p6-15 /*什么时候用指针，不用引用*/

p6-16 /*指针的安全性隐患：地址安全性*/

p6-17 /*指针的安全性隐患：类型安全性*/

p6-18 /*static_cast、reinterpret_cast、const_cast*/

p7-1 /*公有继承*/

p7-2 /*私有继承*/

p7-3 /*保护继承*/

p7-4 /*类型兼容规则*/

p7-5 /*派生类的构造函数。在执行派生类的构造函数时，会先执行基类的构造函数*/

p7-6 /*派生类的析构函数。析构函数执行的顺序与构造函数执行的顺序相反*/

p7-7 /*隐藏规则。要访问被隐藏的成员，使用作用域分辨符“::”和基类类名类限定。*/

p7-8 /*虚基类。在类的派生过程中使用virtual关键词*/

p7-9 /*基类和派生类的转换：显示（强制）转换和隐式转换*/

p8-1 /*重载多态。普通函数和类的成员函数的重载。例：运算符重载*/

p8-2 /*强制多态。先变换类型，再进行操作*/

p8-3 /*包含多态。虚函数实现“重写”。是p7-4类型兼容规则的改进。让基类对象可以访问派生类的函数*/

p8-4 /*参数多态。模板的应用:函数模板、类模板*/

p8-5 /*抽象类。带有纯虚函数的类是抽象类。一个类族派生类的共同接口*/

p9-1/*模板类*/